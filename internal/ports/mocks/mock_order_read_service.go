// Code generated by MockGen. DO NOT EDIT.
// Source: ../order_read_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Gunvolt24/wb_l0/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderReadService is a mock of OrderReadService interface.
type MockOrderReadService struct {
	ctrl     *gomock.Controller
	recorder *MockOrderReadServiceMockRecorder
}

// MockOrderReadServiceMockRecorder is the mock recorder for MockOrderReadService.
type MockOrderReadServiceMockRecorder struct {
	mock *MockOrderReadService
}

// NewMockOrderReadService creates a new mock instance.
func NewMockOrderReadService(ctrl *gomock.Controller) *MockOrderReadService {
	mock := &MockOrderReadService{ctrl: ctrl}
	mock.recorder = &MockOrderReadServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderReadService) EXPECT() *MockOrderReadServiceMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockOrderReadService) GetOrder(ctx context.Context, orderUID string) (*domain.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", ctx, orderUID)
	ret0, _ := ret[0].(*domain.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockOrderReadServiceMockRecorder) GetOrder(ctx, orderUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockOrderReadService)(nil).GetOrder), ctx, orderUID)
}

// OrdersByCustomer mocks base method.
func (m *MockOrderReadService) OrdersByCustomer(ctx context.Context, customerID string, limit, offset int) ([]*domain.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrdersByCustomer", ctx, customerID, limit, offset)
	ret0, _ := ret[0].([]*domain.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrdersByCustomer indicates an expected call of OrdersByCustomer.
func (mr *MockOrderReadServiceMockRecorder) OrdersByCustomer(ctx, customerID, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrdersByCustomer", reflect.TypeOf((*MockOrderReadService)(nil).OrdersByCustomer), ctx, customerID, limit, offset)
}
